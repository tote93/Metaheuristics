/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainProgram;

import BaseClasses.mainClass;
import java.awt.AWTException;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Panel;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartPanel;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author i62gorej
 * Clase principal para representar el programa
 */
public class main_panel extends javax.swing.JFrame {

	// Variable empleada para seleccionar la heuristica a usar
	String _heuristicSelected = null;
	Boolean CloseProgram = false;
	/**
	 * Constructor por defecto, inicializa los elementos visuales y les modifica el estado
	 * @throws IOException
	 */
	public main_panel() throws IOException {
		this.setExtendedState(getExtendedState() | JFrame.MAXIMIZED_BOTH);
		initComponents();
		exportGraphic.setEnabled(false);
		exportGraphic.setToolTipText("Permite exportar la gráfica del algoritmo y heuristicos seleccionados.");
		Dimension sc = Toolkit.getDefaultToolkit().getScreenSize().getSize();
		this.setSize(sc);
		this.jpanelList.setVisible(false);
		this.InitialCheck();
		this.txtInfo.setVisible(false);
		this.jpanelInfo.setVisible(false);
		this.startAlgorithm.setVisible(false);
		this.DisplayPanel.setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ParamsDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        jpanelList = new javax.swing.JScrollPane();
        listAlgorithms = new javax.swing.JList<>();
        jpanelInfo = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        startAlgorithm = new javax.swing.JButton();
        DisplayPanel = new java.awt.Panel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        exportGraphic = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        LocalSearch = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        Grasp = new javax.swing.JMenuItem();
        IterativeGreedy = new javax.swing.JMenuItem();
        SimAnn = new javax.swing.JMenuItem();
        TabuSearch = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        testingButton = new javax.swing.JMenuItem();
        JMenuOut = new javax.swing.JMenu();

        javax.swing.GroupLayout ParamsDialogLayout = new javax.swing.GroupLayout(ParamsDialog.getContentPane());
        ParamsDialog.getContentPane().setLayout(ParamsDialogLayout);
        ParamsDialogLayout.setHorizontalGroup(
            ParamsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        ParamsDialogLayout.setVerticalGroup(
            ParamsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Metaheuristics");
        setMinimumSize(null);
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.lightGray);
        jPanel1.setToolTipText("");

        labelTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelTitle.setText("Bienvenido a Metaheuristics");

        listAlgorithms.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        listAlgorithms.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Algoritmo de la mochila", "Algoritmo de mis pelotis" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listAlgorithms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAlgorithmsMouseClicked(evt);
            }
        });
        jpanelList.setViewportView(listAlgorithms);

        txtInfo.setEditable(false);
        txtInfo.setColumns(20);
        txtInfo.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txtInfo.setLineWrap(true);
        txtInfo.setRows(5);
        txtInfo.setWrapStyleWord(true);
        txtInfo.setPreferredSize(new java.awt.Dimension(800, 900));
        jpanelInfo.setViewportView(txtInfo);

        startAlgorithm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        startAlgorithm.setText("Iniciar");
        startAlgorithm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startAlgorithmMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startAlgorithm)
                .addGap(145, 145, 145))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpanelList, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpanelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jpanelList, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jpanelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(startAlgorithm)
                .addGap(25, 25, 25))
        );

        DisplayPanel.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout DisplayPanelLayout = new javax.swing.GroupLayout(DisplayPanel);
        DisplayPanel.setLayout(DisplayPanelLayout);
        DisplayPanelLayout.setHorizontalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
        );
        DisplayPanelLayout.setVerticalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenu1.setText("Archivo");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem1.setText("Abrir archivo");
        jMenu1.add(jMenuItem1);

        exportGraphic.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exportGraphic.setText("Exportar Gráfica");
        exportGraphic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exportGraphicMousePressed(evt);
            }
        });
        jMenu1.add(exportGraphic);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Heurísticas");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        LocalSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LocalSearch.setText("Búsqueda Local");
        LocalSearch.setToolTipText("La búsqueda se realiza desde una solución inicial que intentamos mejorar modificándola en torno a su vecindario de soluciones.");
        LocalSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LocalSearchMousePressed(evt);
            }
        });
        jMenu2.add(LocalSearch);

        jMenu4.setText("Trayectorias");
        jMenu4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        Grasp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Grasp.setText("Grasp");
        Grasp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GraspMousePressed(evt);
            }
        });
        jMenu4.add(Grasp);

        IterativeGreedy.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IterativeGreedy.setText("Iterative Greedy");
        IterativeGreedy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IterativeGreedyMousePressed(evt);
            }
        });
        jMenu4.add(IterativeGreedy);

        SimAnn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        SimAnn.setText("Enfriamiento Simulado");
        SimAnn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SimAnnMousePressed(evt);
            }
        });
        jMenu4.add(SimAnn);

        TabuSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TabuSearch.setText("Búsqueda Tabú");
        TabuSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TabuSearchMousePressed(evt);
            }
        });
        jMenu4.add(TabuSearch);

        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Extra");
        jMenu3.setFocusable(false);
        jMenu3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        testingButton.setText("Testing");
        testingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                testingButtonMousePressed(evt);
            }
        });
        jMenu3.add(testingButton);

        jMenuBar1.add(jMenu3);

        JMenuOut.setText("Salir");
        JMenuOut.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        JMenuOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMenuOutMouseClicked(evt);
            }
        });
        jMenuBar1.add(JMenuOut);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Función usada para agilizar el proceso de depuración
	 * @param evt
	 */
	private void testingButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testingButtonMousePressed

		mainClass mc = new mainClass("Algoritmo de la mochila", "Trayectories");
		XYSeriesCollection dataset = mc.initialise();
		GenGraphic g = new GenGraphic(dataset, "Trayectories");
		ChartPanel chart = g.createChartPanel();
		chart.setSize(new Dimension(DisplayPanel.getWidth(), DisplayPanel.getHeight()));
		DisplayPanel.removeAll();
		DisplayPanel.add(chart);
		DisplayPanel.validate();
		DisplayPanel.repaint();
	}//GEN-LAST:event_testingButtonMousePressed

	/**
	 * Función ejecutada al seleccionar la heuristica de Climb
	 * @param evt
	 */
	private void LocalSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LocalSearchMousePressed
		
		labelTitle.setText("Búsqueda Local");
		_heuristicSelected = "LocalSearch";
		jpanelList.setVisible(true);
	}//GEN-LAST:event_LocalSearchMousePressed

	/**
	 * Función con la que obtenemos el algoritmo seleccionado de la lista
	 * @param evt
	 */
	private void listAlgorithmsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAlgorithmsMouseClicked
		
		switch (listAlgorithms.getSelectedValue()) {
		case "Algoritmo de la mochila":
			this.txtInfo.setVisible(true);
			this.jpanelInfo.setVisible(true);
			this.txtInfo.setText("");
			this.txtInfo.append("El problema de la mochila, es un problema de optimización combinatoria."
			                    + "\nModela una situación análoga al llenar una mochila con todo o parte de un conjunto de objetos, cada uno con un peso y valor específicos. \n\nLos objetos colocados en la mochila deben maximizar el valor total sin exceder el peso máximo.\n\n"
			                    + "Algunos algoritmos existentes pueden resolverlo en la práctica para casos de un gran tamaño.\n ");
			this.startAlgorithm.setVisible(true);
			break;
		default:
			break;
		}
	}//GEN-LAST:event_listAlgorithmsMouseClicked
	/**
	 * Una vez obtenidos la heuristica y el algoritmo, se ejecutará dicha función, iniciando el algoritmo
	 * @param evt
	 */
	private void startAlgorithmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startAlgorithmMouseClicked
		
		mainClass mc = new mainClass(listAlgorithms.getSelectedValue(), _heuristicSelected );

		XYSeriesCollection dataset = mc.initialise();
		GenGraphic g = new GenGraphic(dataset, _heuristicSelected);
		ChartPanel chart = g.createChartPanel();
		chart.setSize(new Dimension(DisplayPanel.getWidth(), DisplayPanel.getHeight()));

		DisplayPanel.removeAll();
		DisplayPanel.add(chart);
		DisplayPanel.validate();
		DisplayPanel.repaint();
		this.exportGraphic.setEnabled(true);
	}//GEN-LAST:event_startAlgorithmMouseClicked

	private void JMenuOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMenuOutMouseClicked
		
		int n = JOptionPane.showConfirmDialog(
		            getParent(),
		            "¿Seguro desea salir?",
		            "Salir de Metaheuristics",
		            JOptionPane.YES_NO_OPTION);
		//Cerrar programa
		if (n == 0)
			this.dispose();
	}//GEN-LAST:event_JMenuOutMouseClicked

	private void exportGraphicMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportGraphicMousePressed
		
		JOptionPane.showMessageDialog(this, "Gráfica exportada con éxito");
		this.saveImage();
		this.exportGraphic.setEnabled(false);
	}//GEN-LAST:event_exportGraphicMousePressed

    private void GraspMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GraspMousePressed
		labelTitle.setText("Basados en trayectorias");
		_heuristicSelected = "Grasp";
		jpanelList.setVisible(true);
    }//GEN-LAST:event_GraspMousePressed

    private void SimAnnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SimAnnMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SimAnnMousePressed

    private void TabuSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabuSearchMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TabuSearchMousePressed

    private void IterativeGreedyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IterativeGreedyMousePressed

        labelTitle.setText("Basados en trayectorias");
        _heuristicSelected = "IteratedGreedy";
	jpanelList.setVisible(true);
    }//GEN-LAST:event_IterativeGreedyMousePressed



	/**
	* Se realizan las comprobaciones iniciales y en caso de que no se cumpla, se ejecuta el método para crear la jerarquia
	 * @see Reset
	 * @throws IOException
	 */
	public final void InitialCheck() throws IOException {
		String url = new java.io.File(".").getCanonicalPath();
		url = url.replace("\\", "/");
		url = url + "/Algorithms";
		File f = new File(url);
		if (!f.exists()) {
			Reset reset = new Reset();
			reset.createDirectoryHierarchy();
		}
	}
	/**
	 * Función que permite exportar como fichero jpeg la gráfica obtenida
	 */
	private void saveImage() {
		BufferedImage imagebuf = null;
		try {
			imagebuf = new Robot().createScreenCapture(DisplayPanel.bounds());
		} catch (AWTException e1) {
			// TODO Auto-generated catch block
		}
		Graphics2D graphics2D = imagebuf.createGraphics();
		DisplayPanel.paint(graphics2D);
		try {
			ImageIO.write(imagebuf, "jpeg", new File(this._heuristicSelected + "_" + listAlgorithms.getSelectedValue() + ".jpeg"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(main_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(main_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(main_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(main_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> {
			try {
				new main_panel().setVisible(true);
			} catch (IOException ex) {
				Logger.getLogger(main_panel.class.getName()).log(Level.SEVERE, null, ex);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel DisplayPanel;
    private javax.swing.JMenuItem Grasp;
    private javax.swing.JMenuItem IterativeGreedy;
    private javax.swing.JMenu JMenuOut;
    private javax.swing.JMenuItem LocalSearch;
    private javax.swing.JDialog ParamsDialog;
    private javax.swing.JMenuItem SimAnn;
    private javax.swing.JMenuItem TabuSearch;
    private javax.swing.JMenuItem exportGraphic;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jpanelInfo;
    private javax.swing.JScrollPane jpanelList;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JList<String> listAlgorithms;
    private javax.swing.JButton startAlgorithm;
    private javax.swing.JMenuItem testingButton;
    private javax.swing.JTextArea txtInfo;
    // End of variables declaration//GEN-END:variables

	private BufferedImage getScreenShot(Panel DisplayPanel) {
		throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
	}
}
